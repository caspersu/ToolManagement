@using Kendo.Mvc.UI;
@model Tool_Management.Service.ViewModels.vCNCKnifeListViewModel
@{
    ViewBag.Title = "負責機台";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="main">
    <div class="block">
        <div class="title">負責機台</div>
    </div>
    <p>&nbsp;</p>
    <hr>
   
    <div class="container-fluid">

       @using (Html.BeginForm("Save", "PlanEmp", FormMethod.Post, new { id = "editForm", @class = "form-horizontal", enctype = "multipart/form-data" }))
       {
            @Html.AntiForgeryToken();

            @Html.Hidden("Class_EmpID", ViewData["Class_EmpID"]);
            @Html.Hidden("KnifeList_ID", ViewData["KnifeList_ID"]);
            @Html.Hidden("CNCKnifeList_IDs");
            <p>&nbsp;</p>
            
            <p>&nbsp;</p>
            <div class="block">
                <div class="sub_tit">
                    未選擇機台 
                </div>
                <p>&nbsp;</p>
                <p><button class="btn btn-primary" id="btnSave" data-loading-text="設定">設定</button></p>
                <p>&nbsp;</p>
                <section class="section-grid">
                    @(Html.Kendo().Grid<Tool_Management.Service.ViewModels.vCNCKnifeListViewModel>()
                   .Name("gridUnSelect")
                   .Columns(columns =>
                   {
                       columns.Select().Width(50);
                       columns.Bound(c => c.CNC_ID)
                       .HtmlAttributes(new { @class = "gridCell-center" }).Width(150);
                       columns.Bound(c => c.CNC_IP)
                       .HtmlAttributes(new { @class = "gridCell-center" }).Width(100);
                   })
                   .Resizable(r => r.Columns(true))
                   .Scrollable(scrollable => scrollable.Height("auto"))
                   .Events(ev => ev.Change("onChange"))
                   .PersistSelection()
                   .Sortable()
                   .NoRecords("查無資料")
                   .Pageable(
                       pageable => pageable.Refresh(true)
                       .PageSizes(new[] { 10 })
                       .Messages(m =>
                       {
                           m.Empty("查無資料");
                           m.ItemsPerPage("每頁筆數");
                           m.Display("{0} - {1} 共 {2} 筆");
                       })
                   )
                   .DataSource(dataSource => dataSource
                       .Ajax()
                       .Sort(s => { s.Add(o => o.CNC_ID).Descending(); })
                       .Events(events => events.Error("error_handler"))
                       .Model(model =>
                       {
                           model.Id(p => p.CNCKnifeList_ID);

                       })
                       .Read(read => read.Action("GridCNCSearchUnSelect", "PlanEmp", new { Class_EmpID= @ViewData["Class_EmpID"], KnifeList_ID = @ViewData["KnifeList_ID"] }))
                   //.Create(update => update.Action("EditingPopup_Create", "PlanEmp"))
                   //.Update(update => update.Action("EditingPopup_Update", "PlanEmp"))
                   //.Destroy(update => update.Action("EditingPopup_Delete", "KnifeList"))
                   .PageSize(10)
                   )
                    )

                </section>
                <p>&nbsp;</p>
                <p>&nbsp;</p>
                <div class="sub_tit">
                    已選擇機台
                </div>
                <p>&nbsp;</p>
                <section class="section-grid">
                    @(Html.Kendo().Grid<Tool_Management.Service.ViewModels.vEmpCNCKnifeListViewModel>()
                   .Name("gridSelect")
                   .Columns(columns =>
                   {
                       //columns.Select().Width(50);
                       columns.Bound(c => c.CNC_ID)
                       .HtmlAttributes(new { @class = "gridCell-center" }).Width(150);
                       columns.Bound(c => c.CNC_IP)
                       .HtmlAttributes(new { @class = "gridCell-center" }).Width(100);
                       columns.Command(command =>
                       {
                           command.Destroy().Text("刪除");
                       }).Width(150).Title("功能");
                   })
                   .Resizable(r => r.Columns(true))
                   .Scrollable(scrollable => scrollable.Height("auto"))
                   .Events(ev => ev.Change("onChange"))
                   .PersistSelection()
                   .Sortable()
                   .NoRecords("查無資料")
                   .Pageable(
                       pageable => pageable.Refresh(true)
                       .PageSizes(new[] { 10 })
                       .Messages(m =>
                       {
                           m.Empty("查無資料");
                           m.ItemsPerPage("每頁筆數");
                           m.Display("{0} - {1} 共 {2} 筆");
                       })
                   )
                   .DataSource(dataSource => dataSource
                       .Ajax()
                       .Sort(s => { s.Add(o => o.CNC_ID).Descending(); })
                       .Events(events => events.Error("error_handler"))
                       .Model(model =>
                       {
                           model.Id(p => p.Planning_ID);

                       })
                       .Read(read => read.Action("GridCNCSearchSelect", "PlanEmp", new { Class_EmpID = @ViewData["Class_EmpID"],KnifeList_ID = @ViewData["KnifeList_ID"] }))
                   //.Create(update => update.Action("EditingPopup_Create", "PlanEmp"))
                   //.Update(update => update.Action("EditingPopup_Update", "PlanEmp"))
                   .Destroy(update => update.Action("CNCDelete", "PlanEmp"))
                   .PageSize(10)
                   )
                    )

                </section>
                
            </div>
            <hr>


    <p>&nbsp;</p>
       }
        </div>

<script type="text/javascript">
    function error_handler(e) {

        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });

            location.reload();
            alert(message);
        }
        return;
    }
</script>

<script>
    function onChange(arg) {
        $("#CNCKnifeList_IDs").val(this.selectedKeyNames().join(", "));
        alert($("#CNCKnifeList_IDs").val());
    }

    $(function () {

        $("#btnSave").click(function (e) {
            e.preventDefault();
            //debugger;
            console.log('Send it!');
            debugger;
            
            var postData = $("#editForm").serialize();
            //$this.button('loading');
                
            $.post('@(Url.Action("Save", "PlanEmp"))', postData, function (data) {
                
                //if (data.Status == 'ok') {
                if (data.Result == true) {
                    alert('設定成功');
                }
                else {
                    alert('設定失敗:' + data.ErrMsg);
                }
                location.reload();
            })
            .fail(function (jqXHR, textStatus) {
                if (jqXHR.status == 401) {
                    alert("Unauthorized: " + jqXHR.status);
                }
                else {
                    alert("Request failed: " + textStatus);
                }
                $this.button('reset');
            });
        });
    });
</script>
    <script type="text/javascript">
    function error_handler(e) {

        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });

            location.reload();
            alert(message);
        }
        return;
    }
    </script>