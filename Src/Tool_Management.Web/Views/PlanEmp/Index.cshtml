@using Kendo.Mvc.UI;
@model Tool_Management.Service.ViewModels.ProductionPlanViewModel
@{
    ViewBag.Title = "人員配置";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="main">
    <div class="block">
        <div class="title">人員配置</div>
    </div>
    <p>&nbsp;</p>
    <hr>
    <p>&nbsp;</p>
    <div class="container-fluid">

        <div class="form-horizontal" id="queryForm">
            @Html.AntiForgeryToken()

            <div class="block">
                <div class="row">
                    @Html.LabelFor(m => m.Class_EmpID, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-3">
                        @Html.TextBoxFor(m => m.Class_EmpID, new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.Class_EmpID) })
                        <p class="help-block">
                        </p>
                    </div>

                </div>
            </div>

            <div class="container-button text-center">
                <button class="btn btn-primary" id="btnQuery" data-loading-text="查詢">查詢</button>
            </div>
            <p>&nbsp;</p>
            <hr>
            <p>&nbsp;</p>
            <div class="block">
                <div class="sub_tit">
                    查詢結果
                </div>
                <p>&nbsp;</p>

                <section class="section-grid">
                    @(Html.Kendo().Grid<Tool_Management.Service.ViewModels.ProductionPlanViewModel>()
                        .Name("grid")
                        .Columns(columns =>
                        {
                        columns.Bound(c => c.Planning_Create_DT)
                        .Format("{0:yyyy/MM/dd HH:mm:ss}")
                        .HtmlAttributes(new { @class = "gridCell-center" }).Width(150);
                        columns.Bound(c => c.Class_EmpID)
                        .HtmlAttributes(new { @class = "gridCell-center" }).Width(100);
                        columns.Bound(c => c.ModelGoodWk)
                    .HtmlAttributes(new { @class = "gridCell-center" }).Width(150);
                        columns.Bound(c => c.Class_StandardPerson)
                        .HtmlAttributes(new { @class = "gridCell-center" }).Width(100);
                        columns.Bound(c => c.Class_RealPerson)
                    .HtmlAttributes(new { @class = "gridCell-center" }).Width(200);

                        columns.Template(@<text></text>)
                            .Width(120)
                            .HtmlAttributes(new { @class = "gridCell-center" })
                            .ClientTemplate(Html.ActionLink("負責機台", "CNCSetup", "PlanEmp",
                            new { Class_EmpID = "#=Class_EmpID#", KnifeList_ID = "#=KnifeList_ID#" }, new { @class = "btn btn-default" }).ToHtmlString())
                            .Title("");
                            columns.Command(command =>
                            {
                                command.Edit().Text("修改").UpdateText("確認").CancelText("取消");
                            }).Width(250);
                        })
                        .ToolBar(toolbar => toolbar.Create().Text("新增"))
                        .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("SectionTemplate")
                            .Window(w =>
                            {
                                w.Title("人員配置");
                                w.Events(e => { e.Activate("onDeactivate"); });
                            })
                          )
                        .Resizable(r => r.Columns(true))
                        .Scrollable(scrollable => scrollable.Height("auto"))
                        .Sortable()
                        .NoRecords("查無資料")
                        .Pageable(
                            pageable => pageable.Refresh(true)
                            .PageSizes(new[] { 10 })
                            .Messages(m =>
                            {
                                m.Empty("查無資料");
                                m.ItemsPerPage("每頁筆數");
                                m.Display("{0} - {1} 共 {2} 筆");
                            })
                        )
                        .DataSource(dataSource => dataSource
                            .Ajax()
                            .Sort(s => { s.Add(o => o.Class_EmpID).Descending(); })
                            .Events(events => events.Error("error_handler"))
                            .Model(model => { model.Id(p => p.Class_EmpID);
                               
                            })
                            .Read(read => read.Action("GridSearch", "PlanEmp"))
                            .Create(update => update.Action("EditingPopup_Create", "PlanEmp"))
                            .Update(update => update.Action("EditingPopup_Update", "PlanEmp"))
                        //.Destroy(update => update.Action("EditingPopup_Delete", "KnifeList"))
                        .PageSize(10)
                        )
                    )

                </section>
            </div>
        </div>
    </div>

</div>

<script type="text/javascript">
    $(function () {

        $("#btnQuery").click(function (e) {
            e.preventDefault();
            debugger;
            console.log('Query it!');

            var $this = $(this);
            //_trim("updateForm");

            var gridView = $("#grid").data("kendoGrid");
            if (gridView != null) {
                var cnc_id = $("#CNC_ID").val();

                var filterData = [];

                if (model_id != "") {
                    filterData.push({ "field": "CNC_ID", "operator": "contains", "value": cnc_id });
                }

                gridView.dataSource.query({
                    filter: filterData,
                    sort: {
                        field: "CNC_ID",
                        dir: "desc"
                    },
                    page: 1,
                    pageSize: "10"
                });
            }
        });
    });

</script>
<script type="text/javascript">

    function onDeactivate(e) {


        //不秀建立時間


        $("label[for='Planning_Create_ID']").hide();
        $("#Planning_Create_ID").hide();
        $("label[for='Planning_Modify_ID']").hide();
        $("#Planning_Modify_ID").hide();
       $("label[for='Planning_Create_Name']").hide();
        $("#Planning_Create_Name").hide();
        $("label[for='Planning_Modify_Name']").hide();
        $("#Planning_Modify_Name").hide();
        $("label[for='Good_Name']").hide();
        $("#Good_Name").hide();
        $("label[for='Model_Name']").hide();
        $("#Model_Name").hide();
        $("label[for='Planning_Create_DT']").hide();
        $("label[for='Planning_Modify_DT']").hide();
        $(".k-datetimepicker").hide();
        $(".k-select").hide();

        $(".k-grid-update")[0].innerHTML = "確認";
        $(".k-grid-cancel")[0].innerHTML = "取消";

        $(".k-window #Class_Type").kendoDropDownList({
            dataTextField: "Text",
            dataValueField: "Value",
            dataSource: {
                transport: {
                    read: {
                        url: "@Url.Action("GetClassTypeItems", "PlanEmp")",
                }
            }               
            }, serverFiltering: true

        });
        $(".k-window #ModelGoodWk").kendoDropDownList({
            dataTextField: "Text",
            dataValueField: "Value",
            dataSource: {
                transport: {
                    read: {
                        url: "@Url.Action("GetSelectListItems", "KnifeList")",
                }
            }
            }
        });
       
       



    }


</script>

<script type="text/javascript">
    function error_handler(e) {

        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });

            location.reload();
            alert(message);
        }
        return;
    }
</script>

<script>
    function onChange(arg) {
        kendoConsole.log("The selected product ids are: [" + this.selectedKeyNames().join(", ") + "]");
    }
</script>
